syntax = "proto3";
package PluginAdapter.Api;

// Instantiated logical label.
//
// To use this label for label definitions, fill the value with a dummy value.
// For example 'foo' for a string or 1 for an integer.
//
// All fields are optional, except 'label' and 'channel'.
message Label {
  enum LabelType {
    STIMULUS = 0; // Label to be received by the System Under Test (SUT)
    RESPONSE = 1; // Label to be sent by the SUT
  }
  LabelType type = 1;

  // Name of the label. Required.
  string label = 2;

  // Model channel. If the channel is unknown, leave this empty and TestManager will try to deduce it.
  string channel = 3;

  message Parameter {
    message Value {
      message Array {
        repeated Value values = 1;
      }

      message Hash {
        message Entry {
          Value key = 1;
          Value value = 2;
        }
        repeated Entry entries = 1;
      }

      // If a value is not set, the value is nil and has no type. This also
      // applies to arrays, structs or hashes that are not set at all.
      oneof type {
        string string = 1;
        int64  integer = 2;
        double decimal = 3;
        bool   boolean = 4;
        uint64 date = 5; // seconds since the epoch
        uint64 time = 9; // nanoseconds since the epoch

        Array array = 6;
        Hash struct = 7; // Structs have a fixed set of keys. Keys without value are omitted.
        Hash hash_value = 8; // Hashes have variable keys. 'hash' is reserved.
      }
    }

    // Name of the parameter
    string name = 1;

    // Value of the parameter
    Value value = 2;
  }
  repeated Parameter parameters = 4;

  // Time in nanoseconds since Unix epoch at which message was processed by the SUT
  uint64 timestamp = 5;

  // Raw message as sent/received on underlying transport
  bytes physical_label = 6;

  // Code that allows TestManager to relate requested stimuli with the stimuli reported back by plug-in adapters
  uint64 correlation_id = 7;
}
